pipeline {
    agent any    
    environment {
        IMAGE_NAME = 'aceapp6'
        
    }    
    stages {
        stage('Build Docker image for Bar file') {
           agent {
               label 'docker-agent'
           }
            steps {
                script {
                    sh '''
                        ls
                        cd sample
                        docker build -t $IMAGE_NAME --file Dockerfile.aceonly .
                        docker images | grep $IMAGE_NAME
                        '''
                }
            }
        }
        stage('Initialization') {
           agent any
            steps {
                script {
                    sh '''
                        /usr/local/bin/oc login -u admin -p admin https://inquiry1.fyre.ibm.com:8443 --insecure-skip-tls-verify
                        oc project test
                        oc get is
                        oc registry info
                    '''
                }
            }
        }
        stage('docker upload') {
            agent {
               label 'docker-agent'
            }
            steps {
                script {
                    sh '''
                        docker login -p _YSzrI0FgvOTNL0NPnaKAyExkKDH8K25HI_b1LghwnY -u admin docker-registry.default.svc:5000
                        docker tag $IMAGE_NAME docker-registry.default.svc:5000/test/$IMAGE_NAME
                        docker push docker-registry.default.svc:5000/test/$IMAGE_NAME
                    '''
                }
            }
        }
        stage('Build App') {
           agent any
            steps {
                script {
                    sh '''
                        /usr/local/bin/oc new-app -e LICENSE=accept -e ACE_SERVER_NAME=ACESERVER6 -e ACE_TRUSTSTORE_PASSWORD=truststorepwd -e ACE_KEYSTORE_PASSWORD=keystorepwd --image-stream=test/$IMAGE_NAME:latest --insecure-registry
                        oc expose svc/$IMAGE_NAME
                    '''
                }
            }
        }
    }
}
